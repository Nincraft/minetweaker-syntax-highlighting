# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Minetweaker
scopeName: text.minetweaker
fileTypes: [zs]
uuid: 71a9229f-3e62-4a32-bbb2-6e281f391af8

patterns:
- comment: var
  name: storage.type
  match: \b(var)\b
- comment: package import
  name: keyword.other.minetweaker
  match: ^\s*(import)\b(?:\s*([^ ;$]+)\s*(;)?)?
  captures:
    '1': {name: keyword.other}
    '2': {name: storage.modifier}
    '3': {name: punctuation.separator}
- comment: comments
  name: comment.line.number-sign
  match: \s*((#).*$\n?)
- comment: for loop
  name: keyword.control.minetweaker
  match: \b(for)\b
- comment: constants (true, false, null)
  name: constant.language.minetweaker
  match: \b(true|false|null)\b
- comment: numbers
  name: constant.numeric.minetweaker
  match: \b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)([LlFfUuDd]|UL|ul)?\b
- comment: assignment operator
  name: keyword.operator.assignment.minetweaker
  match: (=)
- comment: arrays
  name: storage.type.object.array.minetweaker
  match: \b((?:[a-z]\w*\.)*[A-Z]+\w*)(?=\[)
- comment: ore dictionary
  name: variable.parameter
  match: (<)\b(?:\s*(ore))(?:\s*(:)?)(?:\w*)\b(?:>)?
  captures:
    '1': {name: punctuation.separator}
    '2': {name: storage.type}
    '3': {name: punctuation.separator}
...