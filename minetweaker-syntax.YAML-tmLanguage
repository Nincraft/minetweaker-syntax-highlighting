# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Zen Script - Minetweaker
scopeName: text.minetweaker
fileTypes: [zs]
uuid: 71a9229f-3e62-4a32-bbb2-6e281f391af8

patterns:
- comment: var
  name: storage.type
  match: \b(var|val|bool|byte|short|int|long|float|double|string)\b
- comment: package import
  name: keyword.other.minetweaker
  match: ^\s*(import)\b(?:\s*([^ ;$]+)\s*(;)?)?
  captures:
    '1': {name: keyword.other}
    '2': {name: storage.modifier}
    '3': {name: punctuation.separator}
- comment: inline comments
  name: comment.line.number-sign
  match: \s*((#).*$\n?)
- comment: block comments
  name: comment.block
  begin: \/\*
  beginCaptures:
    '0': {name: comment.block}
  end: \*\/
  endCaptures:
    '0': {name: comment.block}
- comment: control keywords
  name: keyword.control.minetweaker
  match: \b(return|break|case|continue|default|do|while|for|in|switch|if|else)\b
- comment: constants (true, false, null)
  name: constant.language.minetweaker
  match: \b(true|false|null)\b
- comment: numbers
  name: constant.numeric.minetweaker
  match: \b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)([LlFfUuDd]|UL|ul)?\b
- comment: assignment operator
  name: keyword.operator.assignment.minetweaker
  match: (=|\+=|-=|\/=|%=|\*=|^=|\|=|&=|~=)
- comment: math operators
  name: keyword.operator.arithmetic.minetweaker
  match: (\-|\+|\*|\/|%)
- comment: arrays
  name: storage.type.object.array.minetweaker
  match: \b((?:[a-z]\w*\.)*[A-Z]+\w*)(?=\[)
- comment: ore/liquid dictionary
  name: variable.parameter
  match: (<)\b(?:\s*(ore|liquid))(?:\s*(:)?)(?:(\w|\.|:)*)\b(?:>)?
  captures:
    '1': {name: punctuation.separator}
    '2': {name: storage.type}
    '3': {name: punctuation.separator}
- comment: double quote string
  name: string.quoted.double.minetweaker
  contentName: string.other
  begin: \"
  beginCaptures:
    '0': {name: punctuation.definition.string.begin}
  end: \"
  endCaptures:
    '0': {name: punctuation.definition.string.end}
- comment: single quote string
  name: string.quoted.single.minetweaker
  contentName: string.other
  begin: \'
  beginCaptures:
    '0': {name: punctuation.definition.string.begin}
  end: \'
  endCaptures:
    '0': {name: punctuation.definition.string.end}
- comment: functions like function
  name: keyword.other
  match: \b(function)\s?(\()(.*?)(\))
  captures:
    '1': {name: storage.type.function.minetweaker}
    '2': {name: punctuation.definition.parameters.begin.minetweaker}
    '3': {name: variable.parameter.function.minetweaker}
    '4': {name: punctuation.definition.parameters.end.minetweaker}
- comment: built in functions
  name: entity.name.function
  match: (moveResearch|clearPrereqs|addPrereq|removeTab|addBasinRecipe|addAlloy|removeAlloy|addTableRecipe|print|anyDamage|onlyWithTag|transformDamage|withAmount|withTag|withDamage|addShapedMirrored|addShaped|addShapeless|addRecipe|setFuel|removeShapeless|removeShaped|removeMelting|only|marked|matches|applyTransform|weight|updateTag|addMelting|addAll|add|mirror|reuse|transformReplace|onlyDamaged|onlyDamageAtLeast|onlyDamageAtMost|onlyDamageBetween|removeRecipe|remove|transform)
...